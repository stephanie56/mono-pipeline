name: Release (Composite Action)

on:
  push:
    branches:
      - master
  # workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up NodeJS 16 and .npmrc
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          # Defaults to the user or organization that owns the workflow file
          scope: '@stephaniez_rangle'
      - name: Get Diff
        id: get-diff
        run: |
          echo current branch is ${{ github.ref_name }} 
          npm run diff:a || echo "::set-output name=hasAChange::true"
          npm run diff:b || echo "::set-output name=hasBChange::true"
      - name: Run CI for Package A
        if: ${{ steps.get-diff.outputs.hasAChange }}
        id: ci_a
        ## Use github composite action defined in the `actions` folder
        ## This template allows us to create reusable steps that can be nested in the same job
        uses: ./actions/full-ci
        with:
          package_name: a
          package_path: ./packages/a
      - name: Build Package A
        if: ${{ !steps.get-diff.outputs.hasAChange && steps.get-diff.outputs.hasBChange }}
        id: build_a
        uses: ./actions/build-package
        with:
          package_name: a
          package_path: ./packages/a
      - name: Run CI for Package B
        if: ${{ steps.get-diff.outputs.hasBChange }}
        id: ci_b
        uses: ./actions/full-ci
        with:
          package_name: b
          package_path: ./packages/b
      - name: Bump Up Version for Package A
        if: ${{ steps.get-diff.outputs.hasAChange }}
        uses: ./actions/bump-version
        with:
          package_name: a
          package_path: ./packages/a
      - name: Bump Up Version for Package B
        if: ${{ steps.get-diff.outputs.hasBChange }}
        uses: ./actions/bump-version
        with:
          package_name: b
          package_path: ./packages/b
      - name: Publish package A to NPM
        id: publish_a
        working-directory: ./packages/a
        if: ${{ steps.get-diff.outputs.hasAChange }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_PACKAGE_TOKEN }}
      - name: Wait 10 Secs and Install the latest Package A
        if: ${{ steps.get-diff.outputs.hasAChange && steps.get-diff.outputs.hasBChange }}
        working-directory: ./packages/b
        run: |
          sleep 10s
          npm install @stephaniez_rangle/a@latest
      - name: Publish package B to NPM
        if: ${{ steps.get-diff.outputs.hasBChange }}
        working-directory: ./packages/b
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_PACKAGE_TOKEN }}
      ## Compare master and the last release tag git diff
      - name: Push version changes to git repo
        if: ${{ steps.get-diff.outputs.hasAChange || steps.get-diff.outputs.hasBChange }}
        run: |
          git config user.email "stephanie.zeng@rangle.io"
          git config user.name "Stephanie Zeng"
          git add .
          git commit -m "Update package versions [skip ci]"
          git fetch origin master
          git push origin master
